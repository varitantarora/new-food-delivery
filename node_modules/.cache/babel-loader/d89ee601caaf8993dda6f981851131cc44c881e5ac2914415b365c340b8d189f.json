{"ast":null,"code":"var _jsxFileName = \"/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Body.js\",\n  _s = $RefreshSig$();\nimport Restcard, { withPromotedlabel } from \"./Restcard.js\";\nimport Shimmering_ui from \"./Shimmering_ui.js\";\nimport rc from \"../utlis/mockData.js\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { useEffect } from \"react\";\nimport Useonlinestatus from \"../utlis/Useonlinestatus.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  // set variable defined inside the function\n  const [listOfRest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [listOfFilteredrest, setlistOfFilteredrest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [topRatedRest, settopRatedRest] = useState(\"Top Rated Restaurants\");\n  const [searchText, setsearchText] = useState(\"\");\n\n  // //useEffect() for rendering and fetching api\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n  // //fetching data for useEffect hook\n  // const fetchData = async () => {\n  //   const data = await fetch(\n  //     \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=28.6090035&lng=77.4466959&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\",\n  //   );\n  //   const json = await data.json();\n  //   console.log(json);\n  //   // console.log(\n  //   //   json.data.cards[4].card.card.gridElements.infoWithStyle.restaurants\n  //   // );\n  //   setlistOfRest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  //   setlistOfFilteredrest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  // };\n\n  // const location = useLocation();\n  // console.log(location)\n  //  // useEffect hook to reset filtered list when navigating to the Home route\n  //  useEffect(() => {\n  //   // Check if the current location is the Home route\n  //   if (location.pathname === \"/\") {\n  //     // Reset the filtered list to contain all restaurants\n  //     setlistOfFilteredrest(listOfRest);\n  //     // console.log(listOfFilteredrest)\n  //   }\n  // }, []); // Re-run effect when location or listOfRest changes\n\n  //shimmering ui\n  if (listOfFilteredrest.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Shimmering_ui, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  //on click event handler for top rated rest.\n  const handleTopRatedClick = () => {\n    if (topRatedRest === \"Top Rated Restaurants\") {\n      const Filterdlist = listOfRest.filter(res => res.info.avgRating > 4);\n\n      // console.log(Filterdlist);\n\n      setlistOfFilteredrest(Filterdlist);\n      settopRatedRest(\"All Restaurants\"); // Update the button text\n    } else {\n      setlistOfFilteredrest(listOfRest);\n      settopRatedRest(\"Top Rated Restaurants\"); // Update the button text\n    }\n  };\n\n  //online status\n  const x = Useonlinestatus();\n  if (x === false) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"internetStatus\",\n      children: \" you are offline !! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Shimmering_ui, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n  console.log(listOfRest);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_btn \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"searchbar\",\n          placeholder: \"Whats on your mind?!\",\n          value: searchText\n          //event handler\n          ,\n          onChange: event => {\n            //onchange function\n            setsearchText(event.target.value);\n            // event -> it is the event which triggers on change, target ->element that triggers the event , value-> property of the input tag, on the basis of which we will say that an event has occured\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"srchbtn\"\n          //event handdler\n          ,\n          onClick: () => {\n            //filter the restaurant and update the ui\n            // console.log({ searchText });\n\n            const filteredRestaurant = listOfRest.filter(res => res.info.name.toLowerCase().includes(searchText.toLowerCase()));\n            // console.log(filteredRestaurant);\n            setlistOfFilteredrest(filteredRestaurant);\n          },\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: handleTopRatedClick,\n        children: topRatedRest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rest-container\",\n      children: listOfFilteredrest.map(res => {\n        //res is the name of the temporary parameter that helps in looping\n        //resData is the name of the prop\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/restaurant/\" + res.info.id,\n          className: \"Restaurant_button\",\n          children: /*#__PURE__*/_jsxDEV(Restcard, {\n            resData: res\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, res.info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"sKL1iZBf36UbjkuK/j3OUZ2b1/E=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["Restcard","withPromotedlabel","Shimmering_ui","rc","useState","Link","Useonlinestatus","jsxDEV","_jsxDEV","Body","_s","listOfRest","data","cards","card","gridElements","infoWithStyle","restaurants","listOfFilteredrest","setlistOfFilteredrest","topRatedRest","settopRatedRest","searchText","setsearchText","length","fileName","_jsxFileName","lineNumber","columnNumber","handleTopRatedClick","Filterdlist","filter","res","info","avgRating","x","children","className","console","log","type","placeholder","value","onChange","event","target","onClick","filteredRestaurant","name","toLowerCase","includes","map","to","id","resData","_c","$RefreshReg$"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Body.js"],"sourcesContent":["import Restcard , { withPromotedlabel } from \"./Restcard.js\";\nimport Shimmering_ui from \"./Shimmering_ui.js\";\nimport rc from \"../utlis/mockData.js\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { useEffect } from \"react\";\nimport Useonlinestatus from \"../utlis/Useonlinestatus.js\"\n\n\nconst Body = () => {\n  // set variable defined inside the function\n  const [listOfRest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [listOfFilteredrest, setlistOfFilteredrest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [topRatedRest, settopRatedRest] = useState(\"Top Rated Restaurants\");\n  const [searchText, setsearchText] = useState(\"\");\n\n  // //useEffect() for rendering and fetching api\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n  // //fetching data for useEffect hook\n  // const fetchData = async () => {\n  //   const data = await fetch(\n  //     \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=28.6090035&lng=77.4466959&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\",\n  //   );\n  //   const json = await data.json();\n  //   console.log(json);\n  //   // console.log(\n  //   //   json.data.cards[4].card.card.gridElements.infoWithStyle.restaurants\n  //   // );\n  //   setlistOfRest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  //   setlistOfFilteredrest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  // };\n\n  // const location = useLocation();\n  // console.log(location)\n  //  // useEffect hook to reset filtered list when navigating to the Home route\n  //  useEffect(() => {\n  //   // Check if the current location is the Home route\n  //   if (location.pathname === \"/\") {\n  //     // Reset the filtered list to contain all restaurants\n  //     setlistOfFilteredrest(listOfRest);\n  //     // console.log(listOfFilteredrest)\n  //   }\n  // }, []); // Re-run effect when location or listOfRest changes\n\n\n  //shimmering ui\n  if (listOfFilteredrest.length === 0) {\n    return <Shimmering_ui />;\n  }\n\n  //on click event handler for top rated rest.\n  const handleTopRatedClick = () => {\n    if (topRatedRest === \"Top Rated Restaurants\") {\n      const Filterdlist = listOfRest.filter((res) => res.info.avgRating > 4);\n\n      // console.log(Filterdlist);\n\n      setlistOfFilteredrest(Filterdlist);\n      settopRatedRest(\"All Restaurants\"); // Update the button text\n    } else {\n      setlistOfFilteredrest(listOfRest);\n      settopRatedRest(\"Top Rated Restaurants\"); // Update the button text\n    }\n\n  };\n\n  //online status\n  const x = Useonlinestatus()\n  if (x === false) \n  return (\n  <div>\n    <h4 className=\"internetStatus\"> you are offline !! </h4>\n    <Shimmering_ui />\n  </div>\n  );\n\nconsole.log(listOfRest);\n\n  return (\n    <div className=\"Body\">\n      <div className=\"filter\">\n        {/* search bar */}\n        <div className=\"search_btn \">\n          {/* to update the ui with search bar, another state variable is needed, \n        the value is bounded to {searchText} , whenever we type something we want to update the searchText\n        this is done by onCHange event handler */}\n\n          <input\n            type=\"text\"\n            className=\"searchbar\"\n            placeholder=\"Whats on your mind?!\"\n            value={searchText}\n            //event handler\n            onChange={(event) => {\n              //onchange function\n              setsearchText(event.target.value);\n              // event -> it is the event which triggers on change, target ->element that triggers the event , value-> property of the input tag, on the basis of which we will say that an event has occured\n            }}\n          />\n          <button\n            className=\"srchbtn\"\n            //event handdler\n            onClick={() => {\n              //filter the restaurant and update the ui\n              // console.log({ searchText });\n\n              const filteredRestaurant = listOfRest.filter((res) =>\n                res.info.name.toLowerCase().includes(searchText.toLowerCase())\n              );\n              // console.log(filteredRestaurant);\n              setlistOfFilteredrest(filteredRestaurant);\n            }}\n          >\n            search\n          </button>\n        </div>\n        {/* filtering on the basis of top rated rest. */}\n        <button className=\"filter-btn\" onClick={handleTopRatedClick}>\n          {topRatedRest}\n        </button>\n      </div>\n      <div className=\"rest-container\">\n        {listOfFilteredrest.map((res) => {\n          //res is the name of the temporary parameter that helps in looping\n          //resData is the name of the prop\n          return (\n            <Link\n              key={res.info.id}\n              to={\"/restaurant/\" + res.info.id}\n              className=\"Restaurant_button\"\n            >\n              <Restcard resData={res} />\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}