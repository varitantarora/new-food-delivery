{"ast":null,"code":"import{useEffect,useState}from\"react\";import{json,useNavigate}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();// Initialize useNavigate hook\n//variable created to store all the data inputed by the user\n//local storage initally will be empty but as soon as we keep on feding data to it , all will get stored in this data array that we created usign use state hook\nconst[data,setData]=useState([]);//variable created to store current info from user\nconst[info,setInfo]=useState({//create object to input all 3 values\n//name of these feilds is same as that of name of input boxes cuz we want to store the values that we get in the same input box\nname:\"\",email:\"\",password:\"\"});//  console.log(info)\n//to input info from user\nconst getData=event=>{const{value,name}=event.target;setInfo(prevInfo=>({...prevInfo,[name]:value}));};//function to store info we got from the user\nconst addData=e=>{e.preventDefault();//console.log(info);\nconst{name,email,password}=info;if(name===\"\"){alert(\"Username is required\");}else if(email===\"\"){alert(\"Email id is required\");}else if(!email.includes(\"@\")){alert(\"Please enter valid Email ID\");}else if(password===\"\"){alert(\"Password is required\");}else if(password.length<5){alert(\"Password length should be greater than 5\");}else{console.log(\"data added successfully\");//localtroage.setItem(key : \"\" , value ; \"\")\n//store data in local storage\nlocalStorage.setItem(\"userlogindata\",JSON.stringify([...data,info]));// Navigate to sign-in page\nnavigate(\"/LoginSignIn\");// Clear the form fields     \nsetInfo({name:\"\",email:\"\",password:\"\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"loginContainer\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"loginHeading\",children:\" SIGN UP \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"LoginPage\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"loginUsername\",name:\"name\",type:\"text\",placeholder:\"Username\"// value={info}\n,onChange:getData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"loginUsername\",name:\"email\",type:\"email\",placeholder:\"email\"// value={info}\n,onChange:getData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",className:\"loginUsername\",name:\"password\"// value={info}\n,onChange:getData})}),/*#__PURE__*/_jsx(\"button\",{className:\"buttonlogin\",onClick:addData,children:\"Submit\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"signincontainer\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"signinline\",children:\"Already have an account? \"}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",/*#__PURE__*/_jsx(NavLink,{path:true,to:\"/LoginSignIn\",className:\"signinbutton\",children:\" SIGN IN\"})]})]})]})]});};export default Login;","map":{"version":3,"names":["useEffect","useState","json","useNavigate","NavLink","jsx","_jsx","jsxs","_jsxs","Login","navigate","data","setData","info","setInfo","name","email","password","getData","event","value","target","prevInfo","addData","e","preventDefault","alert","includes","length","console","log","localStorage","setItem","JSON","stringify","className","children","type","placeholder","onChange","onClick","path","to"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Login.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Login = () => {\n\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  //variable created to store all the data inputed by the user\n  //local storage initally will be empty but as soon as we keep on feding data to it , all will get stored in this data array that we created usign use state hook\n  const [data, setData] = useState([]);\n\n  //variable created to store current info from user\n  const [info, setInfo] = useState({\n    //create object to input all 3 values\n    //name of these feilds is same as that of name of input boxes cuz we want to store the values that we get in the same input box\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  //  console.log(info)\n\n  //to input info from user\n  const getData = (event) => {\n    const { value, name } = event.target;\n    setInfo((prevInfo) => ({\n      ...prevInfo,\n      [name]: value,\n    }));\n  };\n\n  //function to store info we got from the user\n  const addData = (e) => {\n    e.preventDefault();\n    //console.log(info);\n\n    const { name, email, password } = info;\n    if (name === \"\") {\n      alert(\"Username is required\");\n    } else if (email === \"\") {\n      alert(\"Email id is required\");\n    } else if (!email.includes(\"@\")) {\n      alert(\"Please enter valid Email ID\");\n    } else if (password === \"\") {\n      alert(\"Password is required\");\n    } else if (password.length < 5) {\n      alert(\"Password length should be greater than 5\");\n    } else {\n      console.log(\"data added successfully\");\n\n      //localtroage.setItem(key : \"\" , value ; \"\")\n      //store data in local storage\n      localStorage.setItem(\"userlogindata\", JSON.stringify([...data, info]));\n\n       // Navigate to sign-in page\n       navigate(\"/LoginSignIn\");\n       // Clear the form fields     \n       setInfo({\n         name: \"\",\n         email: \"\",\n         password: \"\",\n        });\n    }\n  };\n  return (\n    <div className=\"loginContainer\">\n      <h2 className=\"loginHeading\"> SIGN UP </h2>\n      <div className=\"LoginPage\">\n        <div>\n          {/* <label htmlFor=\"name\"> name</label> */}\n          <input\n            className=\"loginUsername\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Username\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n\n        <div>\n          {/* <label htmlFor=\"email\"> Email </label> */}\n          <input\n            className=\"loginUsername\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n        <div>\n          {/* <label htmlFor=\"password\"> Password </label> */}\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"loginUsername\"\n            name=\"password\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n\n        <button className=\"buttonlogin\" onClick={addData}>\n          Submit\n        </button>\n        <div className=\"signincontainer\">\n          <p className=\"signinline\">Already have an account? </p>\n          <p  > <NavLink path to=\"/LoginSignIn\"\n          className=\"signinbutton\"> SIGN IN</NavLink>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,OAASC,OAAO,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAElB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAAE;AAEhC;AACA;AACA,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEpC;AACA,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,CAC/B;AACA;AACAc,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACZ,CAAC,CAAC,CACF;AAEA;AACA,KAAM,CAAAC,OAAO,CAAIC,KAAK,EAAK,CACzB,KAAM,CAAEC,KAAK,CAAEL,IAAK,CAAC,CAAGI,KAAK,CAACE,MAAM,CACpCP,OAAO,CAAEQ,QAAQ,GAAM,CACrB,GAAGA,QAAQ,CACX,CAACP,IAAI,EAAGK,KACV,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAG,OAAO,CAAIC,CAAC,EAAK,CACrBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AAEA,KAAM,CAAEV,IAAI,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAGJ,IAAI,CACtC,GAAIE,IAAI,GAAK,EAAE,CAAE,CACfW,KAAK,CAAC,sBAAsB,CAAC,CAC/B,CAAC,IAAM,IAAIV,KAAK,GAAK,EAAE,CAAE,CACvBU,KAAK,CAAC,sBAAsB,CAAC,CAC/B,CAAC,IAAM,IAAI,CAACV,KAAK,CAACW,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC/BD,KAAK,CAAC,6BAA6B,CAAC,CACtC,CAAC,IAAM,IAAIT,QAAQ,GAAK,EAAE,CAAE,CAC1BS,KAAK,CAAC,sBAAsB,CAAC,CAC/B,CAAC,IAAM,IAAIT,QAAQ,CAACW,MAAM,CAAG,CAAC,CAAE,CAC9BF,KAAK,CAAC,0CAA0C,CAAC,CACnD,CAAC,IAAM,CACLG,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CAEtC;AACA;AACAC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,GAAGvB,IAAI,CAAEE,IAAI,CAAC,CAAC,CAAC,CAErE;AACAH,QAAQ,CAAC,cAAc,CAAC,CACxB;AACAI,OAAO,CAAC,CACNC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACX,CAAC,CAAC,CACN,CACF,CAAC,CACD,mBACET,KAAA,QAAK2B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B9B,IAAA,OAAI6B,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,cAC3C5B,KAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB9B,IAAA,QAAA8B,QAAA,cAEE9B,IAAA,UACE6B,SAAS,CAAC,eAAe,CACzBpB,IAAI,CAAC,MAAM,CACXsB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,UACZ;AAAA,CACAC,QAAQ,CAAErB,OAAQ,CACnB,CAAC,CACC,CAAC,cAENZ,IAAA,QAAA8B,QAAA,cAEE9B,IAAA,UACE6B,SAAS,CAAC,eAAe,CACzBpB,IAAI,CAAC,OAAO,CACZsB,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OACZ;AAAA,CACAC,QAAQ,CAAErB,OAAQ,CACnB,CAAC,CACC,CAAC,cACNZ,IAAA,QAAA8B,QAAA,cAEE9B,IAAA,UACE+B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBH,SAAS,CAAC,eAAe,CACzBpB,IAAI,CAAC,UACL;AAAA,CACAwB,QAAQ,CAAErB,OAAQ,CACnB,CAAC,CACC,CAAC,cAENZ,IAAA,WAAQ6B,SAAS,CAAC,aAAa,CAACK,OAAO,CAAEjB,OAAQ,CAAAa,QAAA,CAAC,QAElD,CAAQ,CAAC,cACT5B,KAAA,QAAK2B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B9B,IAAA,MAAG6B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,2BAAyB,CAAG,CAAC,cACvD5B,KAAA,MAAA4B,QAAA,EAAK,GAAC,cAAA9B,IAAA,CAACF,OAAO,EAACqC,IAAI,MAACC,EAAE,CAAC,cAAc,CACrCP,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,UAAQ,CAAS,CAAC,EACxC,CAAC,EACD,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}