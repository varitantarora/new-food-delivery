{"ast":null,"code":"import Restcard from\"./Restcard.js\";import Shimmering_ui from\"./Shimmering_ui.js\";import rc from\"../utlis/mockData.js\";//useState is a hook\nimport{useState}from\"react\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Body=()=>{// set variable defined inside the function\nconst[listOfRest]=useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);const[listOfFilteredrest,setlistOfFilteredrest]=useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);const[searchText,setsearchText]=useState(\"\");// //useEffect() for rendering and fetching api\n// useEffect(() => {\n//   fetchData();\n// }, []);\n// //fetching data for useEffect hook\n// const fetchData = async () => {\n//   const data = await fetch(\n//     \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=28.6090035&lng=77.4466959&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\",\n//   );\n//   const json = await data.json();\n//   console.log(json);\n//   // console.log(\n//   //   json.data.cards[4].card.card.gridElements.infoWithStyle.restaurants\n//   // );\n//   setlistOfRest(\n//     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n//   );\n//   setlistOfFilteredrest(\n//     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n//   );\n// };\n//shimmering ui\nif(listOfFilteredrest.length===0){return/*#__PURE__*/_jsx(Shimmering_ui,{});}//on click event handler for top rated rest.\nconst handleTopRatedClick=()=>{const Filterdlist=listOfRest.filter(res=>res.info.avgRating>4);console.log(Filterdlist);setlistOfFilteredrest(Filterdlist);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search_btn \",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"searchbar\",placeholder:\"Whats on your mind?!\",value:searchText//event handler\n,onChange:event=>{//onchange function\nsetsearchText(event.target.value);// event -> it is the event which triggers on change, target ->element that triggers the event , value-> property of the input tag, on the basis of which we will say that an event has occured\n}}),/*#__PURE__*/_jsx(\"button\",{className:\"srchbtn\"//event handdler\n,onClick:()=>{//filter the restaurant and update the ui\nconsole.log({searchText});const filteredRestaurant=listOfRest.filter(res=>res.info.name.toLowerCase().includes(searchText.toLowerCase()));console.log(filteredRestaurant);setlistOfFilteredrest(filteredRestaurant);},children:\"search\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"filter-btn\",onClick:handleTopRatedClick,children:\"Top Rated restaurants\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"rest-container\",children:listOfFilteredrest.map(res=>{//res is the name of the temporary parameter that helps in looping\n//resData is the name of the prop\nreturn/*#__PURE__*/_jsx(Link,{to:\"/restaurant/\"+res.info.id,className:\"Restaurant_button\",children:/*#__PURE__*/_jsx(Restcard,{resData:res})},res.info.id);})})]});};export default Body;","map":{"version":3,"names":["Restcard","Shimmering_ui","rc","useState","Link","jsx","_jsx","jsxs","_jsxs","Body","listOfRest","data","cards","card","gridElements","infoWithStyle","restaurants","listOfFilteredrest","setlistOfFilteredrest","searchText","setsearchText","length","handleTopRatedClick","Filterdlist","filter","res","info","avgRating","console","log","className","children","type","placeholder","value","onChange","event","target","onClick","filteredRestaurant","name","toLowerCase","includes","map","to","id","resData"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Body.js"],"sourcesContent":["import Restcard from \"./Restcard.js\";\nimport Shimmering_ui from \"./Shimmering_ui.js\";\nimport rc from \"../utlis/mockData.js\";\n//useState is a hook\nimport { useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Body = () => {\n // set variable defined inside the function\n  const [listOfRest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [listOfFilteredrest, setlistOfFilteredrest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n\n\n  const [searchText, setsearchText] = useState(\"\");\n\n  // //useEffect() for rendering and fetching api\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n  // //fetching data for useEffect hook\n  // const fetchData = async () => {\n  //   const data = await fetch(\n  //     \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=28.6090035&lng=77.4466959&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\",\n  //   );\n  //   const json = await data.json();\n  //   console.log(json);\n  //   // console.log(\n  //   //   json.data.cards[4].card.card.gridElements.infoWithStyle.restaurants\n  //   // );\n  //   setlistOfRest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  //   setlistOfFilteredrest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  // };\n \n  //shimmering ui\n  if (listOfFilteredrest.length === 0) {\n    return <Shimmering_ui />;\n  }\n\n  //on click event handler for top rated rest.\n  const handleTopRatedClick = () => {\n    const Filterdlist = listOfRest.filter((res) => res.info.avgRating > 4);\n    console.log(Filterdlist);\n    setlistOfFilteredrest(Filterdlist);\n  };\n\n  return (\n    <div className=\"Body\">\n      <div className=\"filter\">\n        {/* search bar */}\n        <div className=\"search_btn \">\n          {/* to update the ui with search bar, another state variable is needed, \n        the value is bounded to {searchText} , whenever we type something we want to update the searchText\n        this is done by onCHange event handler */}\n\n          <input\n            type=\"text\"\n            className=\"searchbar\"\n            placeholder=\"Whats on your mind?!\"\n            value={searchText}\n            //event handler\n            onChange={(event) => {\n              //onchange function\n              setsearchText(event.target.value);\n              // event -> it is the event which triggers on change, target ->element that triggers the event , value-> property of the input tag, on the basis of which we will say that an event has occured\n            }}\n          />\n          <button\n            className=\"srchbtn\"\n            //event handdler\n            onClick={() => {\n              //filter the restaurant and update the ui\n              console.log({ searchText });\n\n              const filteredRestaurant = listOfRest.filter((res) =>\n                res.info.name.toLowerCase().includes(searchText.toLowerCase())\n              );\n              console.log(filteredRestaurant);\n              setlistOfFilteredrest(filteredRestaurant);\n            }}\n          >\n            search\n          </button>\n        </div>\n        {/* filtering on the basis of top rated rest. */}\n        <button className=\"filter-btn\" onClick={handleTopRatedClick}>\n          Top Rated restaurants\n        </button>\n      </div>\n      <div className=\"rest-container\">\n\n        { \n        listOfFilteredrest.map((res) => \n        {\n          //res is the name of the temporary parameter that helps in looping\n          //resData is the name of the prop\n          return <Link \n          key={res.info.id}\n          to= {\"/restaurant/\" + res.info.id}\n          className=\"Restaurant_button\"\n          > \n          <Restcard resData={res}  /> \n          </Link>;\n        }\n        )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}