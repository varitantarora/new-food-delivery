{"ast":null,"code":"import Restcard from\"./Restcard.js\";import Shimmering_ui from\"./Shimmering_ui.js\";import rc from\"../utlis/mockData.js\";import{useState}from\"react\";import{Link}from\"react-router-dom\";// import { useEffect } from \"react\";\nimport Useonlinestatus from\"../utlis/Useonlinestatus.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Body=()=>{// set variable defined inside the function\nconst[listOfRest]=useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);const[listOfFilteredrest,setlistOfFilteredrest]=useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);const[topRatedRest,settopRatedRest]=useState(\"Top Rated Restaurants\");const[searchText,setsearchText]=useState(\"\");// //useEffect() for rendering and fetching api\n// useEffect(() => {\n//   fetchData();\n// }, []);\n// //fetching data for useEffect hook\n// const fetchData = async () => {\n//   const data = await fetch(\n//     \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=28.6090035&lng=77.4466959&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\",\n//   );\n//   const json = await data.json();\n//   console.log(json);\n//   // console.log(\n//   //   json.data.cards[4].card.card.gridElements.infoWithStyle.restaurants\n//   // );\n//   setlistOfRest(\n//     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n//   );\n//   setlistOfFilteredrest(\n//     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n//   );\n// };\n// const location = useLocation();\n// console.log(location)\n//  // useEffect hook to reset filtered list when navigating to the Home route\n//  useEffect(() => {\n//   // Check if the current location is the Home route\n//   if (location.pathname === \"/\") {\n//     // Reset the filtered list to contain all restaurants\n//     setlistOfFilteredrest(listOfRest);\n//     // console.log(listOfFilteredrest)\n//   }\n// }, []); // Re-run effect when location or listOfRest changes\n//shimmering ui\nif(listOfFilteredrest.length===0){return/*#__PURE__*/_jsx(Shimmering_ui,{});}//on click event handler for top rated rest.\nconst handleTopRatedClick=()=>{if(topRatedRest===\"Top Rated Restaurants\"){const Filterdlist=listOfRest.filter(res=>res.info.avgRating>4);// console.log(Filterdlist);\nsetlistOfFilteredrest(Filterdlist);settopRatedRest(\"All Restaurants\");// Update the button text\n}else{setlistOfFilteredrest(listOfRest);settopRatedRest(\"Top Rated Restaurants\");// Update the button text\n}};//online status\nconst x=Useonlinestatus();if(x===false)return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"internetStatus\",children:\" you are offline !! \"}),/*#__PURE__*/_jsx(Shimmering_ui,{})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"Body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search_btn \",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"searchbar\",placeholder:\"Whats on your mind?!\",value:searchText//event handler\n,onChange:event=>{//onchange function\nsetsearchText(event.target.value);// event -> it is the event which triggers on change, target ->element that triggers the event , value-> property of the input tag, on the basis of which we will say that an event has occured\n}}),/*#__PURE__*/_jsx(\"button\",{className:\"srchbtn\"//event handdler\n,onClick:()=>{//filter the restaurant and update the ui\n// console.log({ searchText });\nconst filteredRestaurant=listOfRest.filter(res=>res.info.name.toLowerCase().includes(searchText.toLowerCase()));// console.log(filteredRestaurant);\nsetlistOfFilteredrest(filteredRestaurant);},children:\"search\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"filter-btn\",onClick:handleTopRatedClick,children:topRatedRest})]}),/*#__PURE__*/_jsx(\"div\",{className:\"rest-container\",children:listOfFilteredrest.map(res=>{//res is the name of the temporary parameter that helps in looping\n//resData is the name of the prop\nreturn/*#__PURE__*/_jsx(Link,{to:\"/restaurant/\"+res.info.id,className:\"Restaurant_button\",children:/*#__PURE__*/_jsx(Restcard,{resData:res})},res.info.id);})})]});};export default Body;","map":{"version":3,"names":["Restcard","Shimmering_ui","rc","useState","Link","Useonlinestatus","jsx","_jsx","jsxs","_jsxs","Body","listOfRest","data","cards","card","gridElements","infoWithStyle","restaurants","listOfFilteredrest","setlistOfFilteredrest","topRatedRest","settopRatedRest","searchText","setsearchText","length","handleTopRatedClick","Filterdlist","filter","res","info","avgRating","x","children","className","type","placeholder","value","onChange","event","target","onClick","filteredRestaurant","name","toLowerCase","includes","map","to","id","resData"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Body.js"],"sourcesContent":["import Restcard from \"./Restcard.js\";\nimport Shimmering_ui from \"./Shimmering_ui.js\";\nimport rc from \"../utlis/mockData.js\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { useEffect } from \"react\";\nimport Useonlinestatus from \"../utlis/Useonlinestatus.js\"\n\nconst Body = () => {\n  // set variable defined inside the function\n  const [listOfRest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [listOfFilteredrest, setlistOfFilteredrest] = useState(rc.data.cards[4].card.card.gridElements.infoWithStyle.restaurants);\n  const [topRatedRest, settopRatedRest] = useState(\"Top Rated Restaurants\");\n  const [searchText, setsearchText] = useState(\"\");\n\n  // //useEffect() for rendering and fetching api\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n  // //fetching data for useEffect hook\n  // const fetchData = async () => {\n  //   const data = await fetch(\n  //     \"https://www.swiggy.com/dapi/restaurants/list/v5?lat=28.6090035&lng=77.4466959&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING\",\n  //   );\n  //   const json = await data.json();\n  //   console.log(json);\n  //   // console.log(\n  //   //   json.data.cards[4].card.card.gridElements.infoWithStyle.restaurants\n  //   // );\n  //   setlistOfRest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  //   setlistOfFilteredrest(\n  //     json?.data?.cards[4]?.card?.card?.gridElements?.infoWithStyle?.restaurants\n  //   );\n  // };\n\n  // const location = useLocation();\n  // console.log(location)\n  //  // useEffect hook to reset filtered list when navigating to the Home route\n  //  useEffect(() => {\n  //   // Check if the current location is the Home route\n  //   if (location.pathname === \"/\") {\n  //     // Reset the filtered list to contain all restaurants\n  //     setlistOfFilteredrest(listOfRest);\n  //     // console.log(listOfFilteredrest)\n  //   }\n  // }, []); // Re-run effect when location or listOfRest changes\n\n\n  //shimmering ui\n  if (listOfFilteredrest.length === 0) {\n    return <Shimmering_ui />;\n  }\n\n  //on click event handler for top rated rest.\n  const handleTopRatedClick = () => {\n    if (topRatedRest === \"Top Rated Restaurants\") {\n      const Filterdlist = listOfRest.filter((res) => res.info.avgRating > 4);\n\n      // console.log(Filterdlist);\n\n      setlistOfFilteredrest(Filterdlist);\n      settopRatedRest(\"All Restaurants\"); // Update the button text\n    } else {\n      setlistOfFilteredrest(listOfRest);\n      settopRatedRest(\"Top Rated Restaurants\"); // Update the button text\n    }\n\n  };\n\n  //online status\n  const x = Useonlinestatus()\n  if (x === false) \n  return (\n  <div>\n    <h4 className=\"internetStatus\"> you are offline !! </h4>\n    <Shimmering_ui />\n  </div>\n  );\n\n\n\n  return (\n    <div className=\"Body\">\n      <div className=\"filter\">\n        {/* search bar */}\n        <div className=\"search_btn \">\n          {/* to update the ui with search bar, another state variable is needed, \n        the value is bounded to {searchText} , whenever we type something we want to update the searchText\n        this is done by onCHange event handler */}\n\n          <input\n            type=\"text\"\n            className=\"searchbar\"\n            placeholder=\"Whats on your mind?!\"\n            value={searchText}\n            //event handler\n            onChange={(event) => {\n              //onchange function\n              setsearchText(event.target.value);\n              // event -> it is the event which triggers on change, target ->element that triggers the event , value-> property of the input tag, on the basis of which we will say that an event has occured\n            }}\n          />\n          <button\n            className=\"srchbtn\"\n            //event handdler\n            onClick={() => {\n              //filter the restaurant and update the ui\n              // console.log({ searchText });\n\n              const filteredRestaurant = listOfRest.filter((res) =>\n                res.info.name.toLowerCase().includes(searchText.toLowerCase())\n              );\n              // console.log(filteredRestaurant);\n              setlistOfFilteredrest(filteredRestaurant);\n            }}\n          >\n            search\n          </button>\n        </div>\n        {/* filtering on the basis of top rated rest. */}\n        <button className=\"filter-btn\" onClick={handleTopRatedClick}>\n          {topRatedRest}\n        </button>\n      </div>\n      <div className=\"rest-container\">\n        {listOfFilteredrest.map((res) => {\n          //res is the name of the temporary parameter that helps in looping\n          //resData is the name of the prop\n          return (\n            <Link\n              key={res.info.id}\n              to={\"/restaurant/\" + res.info.id}\n              className=\"Restaurant_button\"\n            >\n              <Restcard resData={res} />\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}