{"ast":null,"code":"var _jsxFileName = \"/Users/mehakgupta/Downloads/InternFrontEnd/src/components/LoginSignIn.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSignIn = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  //variable created to store current info from user\n  const [info, setInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  //  console.log(info)\n\n  //to input info from user\n  const getData = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n\n  //function to store info we got from the user\n  const addData = e => {\n    e.preventDefault();\n    //console.log(info);\n\n    //get data from local storage\n    const getUserArr = localStorage.getItem(\"userlogindata\");\n    // console.log(getUserArr)\n\n    const {\n      email,\n      password\n    } = info;\n    if (email === \"\") {\n      alert(\"Email id is required\");\n    } else if (!email.includes(\"@\")) {\n      alert(\"Please enter valid Email ID\");\n    } else if (password === \"\") {\n      alert(\"Password is required\");\n    } else if (password.length < 5) {\n      alert(\"Password length should be greater than 5\");\n    } else {\n      //check if data is present in local storage, if present its lenggth should be there\n      if (getUserArr && getUserArr.length) {\n        //if data present convert it in object\n\n        const userData = JSON.parse(getUserArr);\n        // console.log(userData)\n\n        //filter to check if data matches\n        const userLogin = userData.filter((el, key) => {\n          //if we get correct info then it will display the data the data of the user stored in local storage else it will displsy empty object (if pw or username is not correct)\n          return el.email === email && el.password === password;\n        });\n\n        // console.log(userLogin)\n        if (userLogin == 0) {\n          alert(\"Invalid credentials !! \");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"loginHeading\",\n      children: \" SIGN IN \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginUsername\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"email\"\n          // value={info}\n          ,\n          onChange: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"loginUsername\",\n          name: \"password\"\n          // value={info}\n          ,\n          onChange: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonlogin\",\n        onClick: addData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignIn, \"6qN/DSveJC+cUB+r3XdPhJOYvJs=\");\n_c = LoginSignIn;\nexport default LoginSignIn;\nvar _c;\n$RefreshReg$(_c, \"LoginSignIn\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LoginSignIn","_s","data","setData","info","setInfo","email","password","getData","event","value","name","target","prevInfo","addData","e","preventDefault","getUserArr","localStorage","getItem","alert","includes","length","userData","JSON","parse","userLogin","filter","el","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/LoginSignIn.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst LoginSignIn = () => {\n  const [data, setData] = useState([]);\n\n  //variable created to store current info from user\n  const [info, setInfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  //  console.log(info)\n\n  //to input info from user\n  const getData = (event) => {\n    const { value, name } = event.target;\n    setInfo((prevInfo) => ({\n      ...prevInfo,\n      [name]: value,\n    }));\n  };\n\n  //function to store info we got from the user\n  const addData = (e) => {\n    e.preventDefault();\n    //console.log(info);\n\n\n    //get data from local storage\n    const getUserArr = localStorage.getItem(\"userlogindata\");\n    // console.log(getUserArr)\n\n    const { email, password } = info;\n    if (email === \"\") {\n      alert(\"Email id is required\");\n    } else if (!email.includes(\"@\")) {\n      alert(\"Please enter valid Email ID\");\n    } else if (password === \"\") {\n      alert(\"Password is required\");\n    } else if (password.length < 5) {\n      alert(\"Password length should be greater than 5\");\n    } else {\n\n        //check if data is present in local storage, if present its lenggth should be there\n      if (getUserArr && getUserArr.length) {\n\n        //if data present convert it in object\n\n        const userData = JSON.parse(getUserArr);\n        // console.log(userData)\n\n        //filter to check if data matches\n       const userLogin =  userData.filter((el, key) => {\n\n        //if we get correct info then it will display the data the data of the user stored in local storage else it will displsy empty object (if pw or username is not correct)\n          return el.email === email && el.password === password;\n        });\n\n        // console.log(userLogin)\n        if(userLogin == 0) {\n            alert(\"Invalid credentials !! \")\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <h3 className=\"loginHeading\"> SIGN IN </h3>\n      <div className=\"LoginPage\">\n        <div>\n          {/* <label htmlFor=\"email\"> Email </label> */}\n          <input\n            className=\"loginUsername\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n        <div>\n          {/* <label htmlFor=\"password\"> Password </label> */}\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"loginUsername\"\n            name=\"password\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n\n        <button className=\"buttonlogin\" onClick={addData}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginSignIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}