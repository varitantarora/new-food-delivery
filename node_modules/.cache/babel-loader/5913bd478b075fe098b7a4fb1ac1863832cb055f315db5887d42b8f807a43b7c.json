{"ast":null,"code":"var _jsxFileName = \"/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  //variable created to store all the data inputed by the user\n  //local storage initally will be empty but as soon as we keep on feding data to it , all will get stored in this data array that we created usign use state hook\n  const [data, setData] = useState([]);\n\n  //variable created to store current info from user\n  const [info, setInfo] = useState({\n    //create object to input all 3 values\n    //name of these feilds is same as that of name of input boxes cuz we want to store the values that we get in the same input box\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  console.log(info);\n\n  //to input info from user\n  const getData = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n\n  //function to store info we got from the user\n  const addData = e => {\n    e.preventDefault();\n    //console.log(info);\n\n    const {\n      name,\n      email,\n      password\n    } = info;\n    if (name === \"\") {\n      alert(\"Username is required\");\n    } else if (email === \"\") {\n      alert(\"Email id is required\");\n    } else if (!email.includes(\"@\")) {\n      alert(\"Please enter valid Email ID\");\n    } else if (password === \"\") {\n      alert(\"Password is required\");\n    } else if (password.length < 5) {\n      alert(\"Password length should be greater than 5\");\n    } else {\n      console.log(\"data added successfully\");\n\n      //localtroage.setItem(key : \"\" , value ; \"\")\n      //store data in local storage\n      localStorage.setItem(\"userlogindata\", JSON.stringify([...data, info]));\n\n      // Navigate to sign-in page\n      navigate(\"/LoginSignIn\");\n      // Clear the form fields     \n      setInfo({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loginHeading\",\n      children: \" SIGN UP \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginUsername\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Username\"\n          // value={info}\n          ,\n          onChange: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginUsername\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"email\"\n          // value={info}\n          ,\n          onChange: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"loginUsername\",\n          name: \"password\"\n          // value={info}\n          ,\n          onChange: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonlogin\",\n        onClick: addData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signincontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signinline\",\n          children: \"Already have an account? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n            path: true,\n            to: \"/LoginSignIn\",\n            className: \"signinbutton\",\n            children: \" SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"PHg4DiRvCKHgyuCnAvgqk5UrHK8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useState","json","useNavigate","NavLink","jsxDEV","_jsxDEV","Login","_s","navigate","data","setData","info","setInfo","name","email","password","console","log","getData","event","value","target","prevInfo","addData","e","preventDefault","alert","includes","length","localStorage","setItem","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","path","to","_c","$RefreshReg$"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Login.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Login = () => {\n\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  //variable created to store all the data inputed by the user\n  //local storage initally will be empty but as soon as we keep on feding data to it , all will get stored in this data array that we created usign use state hook\n  const [data, setData] = useState([]);\n\n  //variable created to store current info from user\n  const [info, setInfo] = useState({\n    //create object to input all 3 values\n    //name of these feilds is same as that of name of input boxes cuz we want to store the values that we get in the same input box\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n \n  console.log(info)\n  \n  //to input info from user\n  const getData = (event) => {\n    const { value, name } = event.target;\n    setInfo((prevInfo) => ({\n      ...prevInfo,\n      [name]: value,\n    }));\n  };\n\n  //function to store info we got from the user\n  const addData = (e) => {\n    e.preventDefault();\n    //console.log(info);\n\n    const { name, email, password } = info;\n    if (name === \"\") {\n      alert(\"Username is required\");\n    } else if (email === \"\") {\n      alert(\"Email id is required\");\n    } else if (!email.includes(\"@\")) {\n      alert(\"Please enter valid Email ID\");\n    } else if (password === \"\") {\n      alert(\"Password is required\");\n    } else if (password.length < 5) {\n      alert(\"Password length should be greater than 5\");\n    } else {\n      console.log(\"data added successfully\");\n\n      //localtroage.setItem(key : \"\" , value ; \"\")\n      //store data in local storage\n      localStorage.setItem(\"userlogindata\", JSON.stringify([...data, info]));\n\n       // Navigate to sign-in page\n       navigate(\"/LoginSignIn\");\n       // Clear the form fields     \n       setInfo({\n         name: \"\",\n         email: \"\",\n         password: \"\",\n        });\n    }\n  };\n  return (\n    <div className=\"loginContainer\">\n      <h2 className=\"loginHeading\"> SIGN UP </h2>\n      <div className=\"LoginPage\">\n        <div>\n          {/* <label htmlFor=\"name\"> name</label> */}\n          <input\n            className=\"loginUsername\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Username\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n\n        <div>\n          {/* <label htmlFor=\"email\"> Email </label> */}\n          <input\n            className=\"loginUsername\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n        <div>\n          {/* <label htmlFor=\"password\"> Password </label> */}\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"loginUsername\"\n            name=\"password\"\n            // value={info}\n            onChange={getData}\n          />\n        </div>\n\n        <button className=\"buttonlogin\" onClick={addData}>\n          Submit\n        </button>\n        <div className=\"signincontainer\">\n          <p className=\"signinline\">Already have an account? </p>\n          <p  > <NavLink path to=\"/LoginSignIn\"\n          className=\"signinbutton\"> SIGN IN</NavLink>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}