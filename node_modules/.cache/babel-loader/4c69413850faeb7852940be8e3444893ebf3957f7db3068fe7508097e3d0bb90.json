{"ast":null,"code":"var _jsxFileName = \"/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport { MAIN_LOGO } from \"../utlis/constant.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Useonlinestatus from \"../utlis/Useonlinestatus.js\";\nimport UserContext from \"../utlis/UserContext.js\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  //   //import data from useContext hook\n  // // const data = useContext(UserContext)\n  // // console.log(data)\n  // // const dataauser = data.loggedInUser\n  // // console.log(dataauser)\n  // const { loggedInUser } = useContext(UserContext);\n  // // console.log(loggedInUser);\n  // //Defaultuser will disply an object therefor we will extract name from it\n\n  //creating online/offline button\n  const [networkButton, setnetworkButton] = useState(null);\n  const online = Useonlinestatus();\n  const statuscheck = () => {\n    //console.log(\"Online status:\", online); // Log online status\n    online ? setnetworkButton(\"✅\") : setnetworkButton(\"❌\");\n  };\n  useEffect(() => {\n    statuscheck();\n  }, [online]);\n\n  //state variable for storing login button value\n  // const [loginbtn, setloginbtn] = useState(\"Login\");\n  // const LogInOutBtn = () => {\n  //   //conditional operator, if loginbtn= login set it to logout, else set it to login\n  //   loginbtn === \"Login\" ? setloginbtn(\"Logout\") : setloginbtn(\"Login\");\n  // };\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if user data exists in local storage\n    const userData = localStorage.getItem(\"userlogindata\");\n    if (userData) {\n      setIsLoggedIn(true); // User is logged in\n    } else {\n      setIsLoggedIn(false); // User is not logged in\n    }\n  }, []);\n  const handleLogout = () => {\n    // Remove user data from local storage\n    localStorage.removeItem(\"userlogindata\");\n    localStorage.removeItem(\"usersignin\");\n    setIsLoggedIn(false); // Set login status to false\n  };\n  const handleLogin = () => {\n    setIsLoggedIn(true); // Set login status to true\n  };\n\n  //useSelector for cart, subscribing to the store using useSelector\n  const cartItems = useSelector(store => store.cart.items);\n  //console.log(cartItems);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logoimg\",\n          alt: \"logo\",\n          src: MAIN_LOGO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-items\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"pagebutton\",\n            children: [\" \", networkButton, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"pagebutton\",\n            children: [\"Home\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/About\",\n            className: \"pagebutton\",\n            children: [\"About\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Contact\",\n            className: \"pagebutton\",\n            children: [\"Contact\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Cart\",\n            className: \"pagebutton\",\n            children: [\"\\uD83D\\uDED2 (\", cartItems.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Login\",\n          className: \"pagebutton\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Login\",\n            className: \"pagebutton\",\n            children: [isLoggedIn &&\n            /*#__PURE__*/\n            // Show logout button if user is logged in\n            _jsxDEV(\"button\", {\n              className: \"login-button\",\n              onClick: handleLogout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 5\n            }, this), !isLoggedIn &&\n            /*#__PURE__*/\n            // Show login button if user is not logged in\n            _jsxDEV(\"button\", {\n              className: \"login-button\",\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"hPvwhbR16zBi9jjowrn0PE0QA2w=\", false, function () {\n  return [useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["MAIN_LOGO","useState","useEffect","useContext","Link","Useonlinestatus","UserContext","useSelector","jsxDEV","_jsxDEV","Header","_s","networkButton","setnetworkButton","online","statuscheck","isLoggedIn","setIsLoggedIn","userData","localStorage","getItem","handleLogout","removeItem","handleLogin","cartItems","store","cart","items","className","children","href","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","to","length","onClick","_c","$RefreshReg$"],"sources":["/Users/mehakgupta/Downloads/InternFrontEnd/src/components/Header.js"],"sourcesContent":["import { MAIN_LOGO } from \"../utlis/constant.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Useonlinestatus from \"../utlis/Useonlinestatus.js\";\nimport UserContext from \"../utlis/UserContext.js\";\nimport { useSelector } from \"react-redux\";\n\nconst Header = () => {\n  //   //import data from useContext hook\n  // // const data = useContext(UserContext)\n  // // console.log(data)\n  // // const dataauser = data.loggedInUser\n  // // console.log(dataauser)\n  // const { loggedInUser } = useContext(UserContext);\n  // // console.log(loggedInUser);\n  // //Defaultuser will disply an object therefor we will extract name from it\n\n  //creating online/offline button\n  const [networkButton, setnetworkButton] = useState(null);\n  const online = Useonlinestatus();\n  const statuscheck = () => {\n    //console.log(\"Online status:\", online); // Log online status\n    online ? setnetworkButton(\"✅\") : setnetworkButton(\"❌\");\n  };\n  useEffect(() => {\n    statuscheck();\n  }, [online]);\n\n  //state variable for storing login button value\n  // const [loginbtn, setloginbtn] = useState(\"Login\");\n  // const LogInOutBtn = () => {\n  //   //conditional operator, if loginbtn= login set it to logout, else set it to login\n  //   loginbtn === \"Login\" ? setloginbtn(\"Logout\") : setloginbtn(\"Login\");\n  // };\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if user data exists in local storage\n    const userData = localStorage.getItem(\"userlogindata\");\n    if (userData) {\n      setIsLoggedIn(true); // User is logged in\n    } else {\n      setIsLoggedIn(false); // User is not logged in\n    }\n  }, []);\n\n  const handleLogout = () => {\n    // Remove user data from local storage\n    localStorage.removeItem(\"userlogindata\");\n    localStorage.removeItem(\"usersignin\");\n    setIsLoggedIn(false); // Set login status to false\n  };\n\n  const handleLogin = () => {\n    setIsLoggedIn(true); // Set login status to true\n  };\n\n  //useSelector for cart, subscribing to the store using useSelector\n  const cartItems = useSelector((store) => store.cart.items);\n  //console.log(cartItems);\n\n  return (\n    <div className=\"header\">\n      <div className=\"image-container\">\n        <a href=\"/\">\n          <img className=\"logoimg\" alt=\"logo\" src={MAIN_LOGO}></img>\n        </a>\n      </div>\n      <div className=\"nav-items\">\n        <ul>\n          <li>\n            {\" \"}\n            <h4 className=\"pagebutton\"> {networkButton} </h4>\n          </li>\n          <li>\n            <Link to=\"/\" className=\"pagebutton\">\n              Home{\" \"}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/About\" className=\"pagebutton\">\n              About{\" \"}\n            </Link>\n            {/* <a href=\"/About\"> About </a>  */}\n          </li>\n          <li>\n            <Link to=\"/Contact\" className=\"pagebutton\">\n              Contact{\" \"}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/Cart\" className=\"pagebutton\">\n              🛒 ({cartItems.length})\n            </Link>\n          </li>\n          {/* <li> */}\n            <Link to=\"/Login\" className=\"pagebutton\">\n\n              {/* {isLoggedIn ? ( // Show logout button if user is logged in\n                <button className=\"login-button\" onClick={handleLogout}>\n                  Logout\n                </button>\n              ) : (\n                // Show login button if user is not logged in\n\n                <button className=\"login-button\" onClick={handleLogin}>\n                  Login\n                </button>\n              )} */}\n              {/* <button className=\"login-button\" onClick={LogInOutBtn}>\n                {\" \"}\n                {loginbtn}\n              </button> */}\n\n<Link to=\"/Login\" className=\"pagebutton\">\n  {isLoggedIn && ( // Show logout button if user is logged in\n    <button className=\"login-button\" onClick={handleLogout}>\n      Logout\n    </button>\n  )}\n  {!isLoggedIn && ( // Show login button if user is not logged in\n    <button className=\"login-button\" onClick={handleLogin}>\n      Login\n    </button>\n  )}\n</Link>\n\n\n            </Link>\n          {/* </li> */}\n\n          {/* <li className =\"defaultuser\">\n         {loggedInUser}\n          </li> */}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}